[
  {
    "objectID": "publication_summary.html",
    "href": "publication_summary.html",
    "title": "Publications",
    "section": "",
    "text": "Code\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(scales)\nlibrary(RColorBrewer)\nconflicts_prefer(plotly::layout)\n\nlibrary(tidyverse)\nlibrary(scholar)\nlibrary(DT)\nlibrary(magrittr)\n\nscholar_id &lt;- \"g_m1R7IAAAAJ\"\n\nscholar_output &lt;- scholar::get_publications(id = scholar_id) %&gt;%\n  rowwise() %&gt;%\n  mutate(\n    author = case_when(\n    str_ends(author, \"\\\\.\\\\.\\\\.\") ~ get_complete_authors(id = scholar_id, pubid = pubid),\n    TRUE ~ author\n    )\n  ) %&gt;%\nungroup()\n\nprofile &lt;- scholar::get_profile(scholar_id)\n                                \ncitation_history &lt;- scholar::get_citation_history(id = scholar_id)\n\nnpapers &lt;- scholar_output$title |&gt; unique() |&gt; length()\nncites &lt;- scholar_output$cites |&gt; sum()\nhindex &lt;- profile$h_index\ni10 &lt;- profile$i10_index\naffiliation &lt;- profile$affiliation\n\ndatatable(\n  data.frame(\n    a = c(\"Author\", \"Affiliation\", \"Total Citations\", \"i-10 index\", \"h-index\", \"Publications to date\"),\n    b = c(\"George Roff\", affiliation, ncites, hindex, i10, npapers)\n  ) |&gt; t(),\n  colnames = NULL,\n  options = list(\n    dom = 't',  # show only the table body\n    paging = FALSE,\n    ordering = FALSE\n  ),\n  rownames = FALSE\n) %&gt;%\n  formatStyle(columns = c(1, 2, 3, 4, 5, 6, 7), fontSize = '80%') \n\n\n\n\n\n\nAll publication data generated dynamically R (scholar, wordcloud) and Plotly:\n\nSummary statistics\n\n\nCode\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(scales)\nlibrary(RColorBrewer)\nconflicts_prefer(plotly::layout)\n\n\npubs_per_year &lt;- scholar_output %&gt;%\n  group_by(year) %&gt;%\n  summarise(publications = n(), .groups = 'drop')\n\nscholar_output_prepped &lt;- scholar_output %&gt;%\n  ungroup() %&gt;%\n  arrange(desc(year), cites) %&gt;%\n  mutate(\n    n = seq(1:nrow(.)),\n    author = gsub(\"(G Roff)\", \"&lt;b&gt;\\\\1&lt;/b&gt;\", author, ignore.case = TRUE),  # Use HTML for bold formatting\n    cites = as.numeric(cites)  # Ensure cites is numeric\n  ) %&gt;%\n  select(n, author, year, title, journal, number, cites) %&gt;%\n  rename(\n    \"Year\" = \"year\",\n    \"Authors\" = \"author\",\n    \"Journal\" = \"journal\",\n    \"Issue/Number\" = \"number\",\n    \"Citations\" = \"cites\"\n  )\n\n\n\n\n\n###### Plot 1 – Publications per Year\npubs_per_year &lt;- scholar_output %&gt;%\n  group_by(year) %&gt;%\n  summarise(publications = n(), .groups = 'drop')\n\n# Generate Spectral palette for publications\nnum_years &lt;- nrow(pubs_per_year)\ncolors1 &lt;- colorRampPalette(brewer.pal(11, \"Spectral\"))(num_years)\n\npubs_plot &lt;- plot_ly(\n  pubs_per_year,\n  x = ~year,\n  y = ~publications,\n  type = 'bar',\n  marker = list(\n    color = colors1,\n    line = list(color = 'black', width = 1)  # Add thin black border\n  ),\n  hoverinfo = 'text',\n  text = ~paste0(\"Year: \", year, \"&lt;br&gt;Publications: \", publications),\n  textfont = list(size = 6)\n) %&gt;%\n  layout(\n    title = \"Publications per Year\",\n    xaxis = list(title = \"Year\"),\n    yaxis = list(title = \"Number of Publications\"),\n    showlegend = FALSE\n  )\n\n####### Plot 2 – Cumulative Citations per Year\ncumulative_citations &lt;- citation_history %&gt;%\n  arrange(year) %&gt;%\n  mutate(cumulative_cites = cumsum(cites))\n\n# Step 5: Plot 3 – Citations by Publication Rank\nscholar_output_ranked &lt;- scholar_output %&gt;%\n  arrange(desc(cites)) %&gt;%\n  mutate(n = row_number())\n\n\n# Generate Spectral palette for publication rank plot\nnum_ranked &lt;- nrow(scholar_output_ranked)\ncolors_ranked &lt;- colorRampPalette(brewer.pal(8, \"RdYlBu\"))(num_ranked)\n\nrank_plot &lt;- plot_ly(\n  scholar_output_ranked,\n  x = ~n,\n  y = ~cites,\n  type = 'bar',\n  marker = list(\n    color = colors_ranked,\n    line = list(color = 'black', width = 1)  # Add thin black border\n  ),\n  hoverinfo = 'text',                        # Only display hover text\n  text = ~paste0(\"Title: \", title, \"&lt;br&gt;Year: \", year, \"&lt;br&gt;Citations: \", cites),\n  textfont = list(size = 0)                  # No bar labels displayed\n) %&gt;%\n  layout(\n    title = NULL,\n    xaxis = list(title = \"Publication Rank\"),\n    yaxis = list(title = \"Cumulative Citations\"),\n    showlegend = FALSE,\n    shapes = list(\n      list(\n        type = 'line',\n        x0 = 0,\n        x1 = 1,\n        xref = 'paper',\n        y0 = 10,\n        y1 = 10,\n        line = list(\n          color = 'black',\n          width = 2,\n          dash = 'dot'\n        )\n      )\n    )\n  )\n\n###### Plot 3 Cumulative citations\n\n# Generate Spectral palette for cumulative citations\nnum_years2 &lt;- nrow(cumulative_citations)\ncolors2 &lt;- colorRampPalette((brewer.pal(11, \"RdBu\")))(num_years2)\n\ncitations_plot &lt;- plot_ly(\n  cumulative_citations,\n  x = ~year,\n  y = ~cumulative_cites,\n  type = 'scatter',\n  mode = 'lines+markers',\n  line = list(color = 'black', width = 1),  # Narrow black line\n   marker = list(\n    color = colors2,\n    size = 9,       \n    line = list(color = 'black', width = 1)  # Add thin black border\n  ),\n  hoverinfo = 'text',\n  text = ~paste0(\"Year: \", year, \"&lt;br&gt;Cumulative Citations: \", cumulative_cites)\n) %&gt;%\n  layout(\n    title = \"\",\n    xaxis = list(title = \"Year\"),\n    yaxis = list(title = \"Cumulative Citations\"),\n    showlegend = FALSE\n  )\n# \n# # Step 6: Display all three plots in a multi-panel layout\n# subplot(\n#   pubs_plot, rank_plot, citations_plot,\n#   nrows = 1,\n#   titleX = TRUE,\n#   titleY = TRUE,\n#   widths = c(0.3, 0.3, 0.3),  # Adjust plot widths if necessary\n#   margin = 0.04               # Set spacing between each plot\n# ) %&gt;%\n# layout(\n#   xaxis = list(title = \"Year / Rank\", domain = c(0, 0.3), titlefont = list(size = 9), tickfont = list(size = 9)),\n#   xaxis2 = list(title = \"Rank\", domain = c(0.35, 0.65), titlefont = list(size = 9), tickfont = list(size = 9)),\n#   xaxis3 = list(title = \"Citations\", domain = c(0.7, 1), titlefont = list(size = 9), tickfont = list(size = 9)),\n#   yaxis = list(titlefont = list(size = 9), tickfont = list(size = 9)),\n#   yaxis2 = list(titlefont = list(size = 9), tickfont = list(size = 9)),\n#   yaxis3 = list(titlefont = list(size = 9), tickfont = list(size = 9)),\n#   #uniformtext = list(minsize = 6, mode = 'show'),\n#   margin = list(l = 50, r = 50, t = 50, b = 50, pad = 5)\n# )\n\nsubplot(\n  pubs_plot, citations_plot, rank_plot,\n  nrows = 3,\n  titleX = TRUE,\n  titleY = TRUE,\n  margin = 0.04\n) %&gt;%\nlayout(\n  xaxis = list(title = \"Year / Rank\", titlefont = list(size = 9), tickfont = list(size = 9)),\n  xaxis2 = list(title = \"Rank\", titlefont = list(size = 9), tickfont = list(size = 9)),\n  xaxis3 = list(title = \"Citations\", titlefont = list(size = 9), tickfont = list(size = 9)),\n  yaxis = list(titlefont = list(size = 9), tickfont = list(size = 9)),\n  yaxis2 = list(titlefont = list(size = 9), tickfont = list(size = 9)),\n  yaxis3 = list(titlefont = list(size = 9), tickfont = list(size = 9)),\n  margin = list(l = 50, r = 50, t = 50, b = 50, pad = 5)\n)\n\n\n\n\n\n\n\n\nPublication journals\n\n\nCode\nlibrary(wordcloud)\nlibrary(grid)\nlibrary(cowplot)\nlibrary(gridGraphics)\nlibrary(png)\nlibrary(gtable)\n\n# Define keyword lookup\nsubject_keywords &lt;- list(\n  Ecology = c(\"ecology\", \"oikos\", \"oecologia\", \"ecological\", \"Ecosystems\"),\n  MarineBiology = c(\"coral reefs\", \"marine biology\", \"PLoS ONE\", \"proceedings\", \"Scientific\", \"Fish\", \"total\", \"Oceanography\", \"sharks\"),\n  Geology = c(\"palaeo\",  \"geology\", \"earth\", \"Quaternary\", \"Paleoceanography\"),\n  Microbiology = c(\"microbiology\", \"Molecular\", \"isme\"),\n  Climate = c(\"National\", \"Open\", \"Climate\", \"bioRxiv\"),\n  Geochemistry = c(\"geochem\", \"Geophysical\", \"Geochronology\", \"Geochimica\", \"Biogeosciences\"),\n  Conservation = c(\"pollution\", \"peer\", \"global\", \"conservation\",\"Communications\", \"endangered\", \"Biology\"),\n  Evolution = c(\"bioscience\", \"Biogeography\")\n)\n\n# Assign subject(s)\njournal_subjects &lt;- scholar_output_prepped %&gt;%\n  mutate(\n    subject = sapply(Journal, function(j) {\n      matches &lt;- names(subject_keywords)[\n        sapply(subject_keywords, function(keywords) {\n          any(grepl(paste(keywords, collapse = \"|\"), j, ignore.case = TRUE))\n        })\n      ]\n      paste(matches, collapse = \";\")\n    })\n  )\n\n# Count frequency of each journal per subject\nsubject_freq &lt;- journal_subjects %&gt;%\n  filter(subject != \"\") %&gt;%\n  separate_rows(subject, sep = \";\") %&gt;%\n  group_by(subject, Journal) %&gt;%\n  summarise(n = n(), .groups = \"drop\") %&gt;%\n  arrange(subject, desc(n)) %&gt;%\n  mutate(freq_scaled = log1p(n))\n\n\nset.seed(1)\nwordcloud(\n  words = subject_freq$Journal,\n  freq = subject_freq$n,\n  min.freq = 1,\n  max.words = Inf,\n  color=\"#202020\",\n # colors = brewer.pal(4, \"Spectral\"),\n  scale = c(5,0.5),\n  random.order = FALSE,\n  use.r.layout = TRUE,\n  rot.per=0.3\n)\n\n\n\n\n\n\n\n\n\nCode\nset.seed(NULL)\n\n\n\n\nSelected publications\n\n\nCode\n## All publications to bib\n# Convert to BibTeX format\nscholar_bib &lt;- scholar_output %&gt;%\n  mutate(\n    bibtex_entry = paste0(\n      \"@article{\", pubid, \",\\n\",\n      \"  title = {\", title, \"},\\n\",\n      \"  author = {\", author, \"},\\n\",\n      \"  journal = {\", journal, \"},\\n\",\n      \"  year = {\", year, \"},\\n\",\n      \"  volume = {\", sub(\" \\\\(.*\", \"\", number), \"},\\n\", # Extract volume before '('\n      \"  number = {\", sub(\".*\\\\((.*)\\\\).*\", \"\\\\1\", number), \"},\\n\", # Extract issue inside '()'\n      \"  pages = {\", cites, \"},\\n\",\n      \"  cid = {\", cid, \"},\\n\",\n      \"  pubid = {\", pubid, \"}\\n\",\n      \"}\"\n    )\n  ) %&gt;%\n  pull(bibtex_entry)\n\n#writeLines(scholar_bib, \"scholar_output.bib\")\n\n## select publications to bib\nsearch_terms &lt;- c(\"Global disparity\", \"sharks on coral reefs\", \"evolutionary history\", \"seascapes\", \"decline of branching\", \"decoupled in Holocene\")\n\nscholar_bib &lt;- scholar_output %&gt;%\n  filter(sapply(title, function(x) any(grepl(paste(search_terms, collapse = \"|\"), x, ignore.case = TRUE)))) |&gt; \n  mutate(\n    bibtex_entry = paste0(\n      \"@article{\", pubid, \",\\n\",\n      \"  title = {\", title, \"},\\n\",\n      \"  author = {\", author, \"},\\n\",\n      \"  journal = {\", journal, \"},\\n\",\n      \"  year = {\", year, \"},\\n\",\n      \"  volume = {\", sub(\" \\\\(.*\", \"\", number), \"},\\n\", # Extract volume before '('\n      \"  number = {\", sub(\".*\\\\((.*)\\\\).*\", \"\\\\1\", number), \"},\\n\", # Extract issue inside '()'\n      \"  pages = {\", cites, \"},\\n\",\n      \"  cid = {\", cid, \"},\\n\",\n      \"  pubid = {\", pubid, \"}\\n\",\n      \"}\"\n    )\n  ) %&gt;%\n  pull(bibtex_entry)\n\nwriteLines(scholar_bib, \"select_scholar_output.bib\")\n\n# Function to lighten a vector of colors\nlighten_colors &lt;- function(colors, factor = 0.5) {\n  if (factor &lt; 0 || factor &gt; 1) stop(\"Factor must be between 0 and 1\")\n  col2rgb(colors) %&gt;%\n    t() %&gt;%\n    apply(1, function(col) {\n      rgb(\n        red = col[1] + (255 - col[1]) * factor,\n        green = col[2] + (255 - col[2]) * factor,\n        blue = col[3] + (255 - col[3]) * factor,\n        maxColorValue = 255\n      )\n    })\n}\n\n\n\n\npubs_per_year &lt;- scholar_output %&gt;%\n  group_by(year) %&gt;%\n  summarise(publications = n(), .groups = 'drop')\n\nscholar_output_prepped &lt;- scholar_output %&gt;%\n  ungroup() %&gt;%\n  arrange(desc(year), cites) %&gt;%\n  mutate(\n    n = seq(1:nrow(.)),\n    author = gsub(\"(G Roff)\", \"&lt;b&gt;\\\\1&lt;/b&gt;\", author, ignore.case = TRUE),  # Use HTML for bold formatting\n    cites = as.numeric(cites)  # Ensure cites is numeric\n  ) %&gt;%\n  select(n, author, year, title, journal, number, cites) %&gt;%\n  rename(\n    \"Year\" = \"year\",\n    \"Authors\" = \"author\",\n    \"Journal\" = \"journal\",\n    \"Issue/Number\" = \"number\",\n    \"Citations\" = \"cites\"\n  )\n\n\n\n# Generate colors using RColorBrewer with adjusted alpha\nnum_colors &lt;- nrow(scholar_output_prepped)\ncolor_palette &lt;- colorRampPalette(rev(RColorBrewer::brewer.pal(9, \"RdYlBu\")))(num_colors)\ncolor_palette &lt;- lighten_colors(color_palette, factor = 0.4)  # Set alpha to 0.7\n\n# Map colors to the Citations column\nscholar_output_prepped &lt;- scholar_output_prepped %&gt;%\n                                 filter(grepl(\"Palaeoecological evidence\", title) | \n                                 grepl(\"Global disparity\", title) |\n                                 grepl(\"Decadal‐scale rates of reef erosion\", title) |\n                                 grepl(\"Seascape\", title) |\n                                 grepl(\"Rapid accretion of inshore reef\", title) |\n                                 grepl(\"Reassessing Shark-Driven Trophic\", title) |\n                                 grepl(\"Decline of coastal apex shark populations\", title) |\n                                 grepl(\"Reef accretion and coral growth rates\", title) |\n                                 grepl(\"Evolutionary history drives\", title) |\n                                 grepl(\"Revisiting the paradigm of shark‐driven\", title) |\n                                 grepl(\"Climate change impacts on mesophotic regions\", title) |\n                                 grepl(\"Reef accretion and coral growth rates\", title) |\n                                 grepl(\"Cryptic coral recruits as dormant “seed banks”\", title)\n                                  ) |&gt; \n  mutate(\n    cite_color = color_palette[rank(Citations, ties.method = \"first\")]\n  )\n\n\ndatatable(\n  scholar_output_prepped %&gt;% select(-cite_color) %&gt;% mutate(n=seq(1:n())),\n  escape = FALSE,\n  options = list(\n    search = list(regex = TRUE, caseInsensitive = FALSE),\n    autoWidth = FALSE,\n    dom = 't&lt;\"bottom\"ip&gt;',\n    pageLength = 100,\n    columnDefs = list(\n      list(className = 'dt-center', targets = \"_all\"),\n      list(width = '10%', targets = 0),\n      list(width = '30%', targets = 1),\n      list(width = '10%', targets = 2),\n      list(width = '30%', targets = 3),\n      list(width = '10%', targets = 4),\n      list(width = '10%', targets = 5),\n      list(width = '10%', targets = 6)\n    )\n  ),\n  rownames = FALSE,\n  class = \"cell-border stripe\"\n) %&gt;% \n  formatStyle( 'Citations',\n  backgroundColor = styleEqual(scholar_output_prepped$Citations, scholar_output_prepped$cite_color),\n  color = \"black\", fontSize = '60%'\n) %&gt;%\n  formatStyle(columns = c(1, 2, 3, 4, 5, 6, 7), fontSize = '80%')"
  },
  {
    "objectID": "publications.html",
    "href": "publications.html",
    "title": "Publications",
    "section": "",
    "text": "Publication list dynamically generated via scholar, bibtex, kbl)\n\n\n\n\n\nCode\nlibrary(tidyverse)\nlibrary(scholar)\nlibrary(DT)\nlibrary(magrittr)\nlibrary(RColorBrewer)\n\nscholar_id &lt;- \"g_m1R7IAAAAJ\"\n\nscholar_output &lt;- scholar::get_publications(id = scholar_id) %&gt;%\n  rowwise() %&gt;%\n  mutate(\n    author = case_when(\n    str_ends(author, \"\\\\.\\\\.\\\\.\") ~ get_complete_authors(id = scholar_id, pubid = pubid),\n    TRUE ~ author\n    )\n  ) %&gt;%\nungroup()\n\nscholar_output_prepped &lt;- scholar_output %&gt;%\n  ungroup() %&gt;%\n  arrange(desc(year), cites) %&gt;%\n  mutate(\n    n = seq(1:nrow(.)),\n    author = gsub(\"(G Roff)\", \"&lt;b&gt;\\\\1&lt;/b&gt;\", author, ignore.case = TRUE),  # Use HTML for bold formatting\n    cites = as.numeric(cites)  # Ensure cites is numeric\n  ) %&gt;%\n  select(n, author, year, title, journal, number, cites) %&gt;%\n  rename(\n    \"Year\" = \"year\",\n    \"Authors\" = \"author\",\n    \"Journal\" = \"journal\",\n    \"Issue/Number\" = \"number\",\n    \"Citations\" = \"cites\"\n  )\n\nprofile &lt;- scholar::get_profile(scholar_id)\n                                \ncitation_history &lt;- scholar::get_citation_history(id = scholar_id)\n\n\nnpapers &lt;- scholar_output$title |&gt; unique() |&gt; length()\nncites &lt;- scholar_output$cites |&gt; sum()\nhindex &lt;- profile$h_index\ni10 &lt;- profile$i10_index\naffiliation &lt;- profile$affiliation\n\ndatatable(\n  data.frame(\n    a = c(\"Author\", \"Affiliation\", \"Total Citations\", \"i-10 index\", \"h-index\", paste0(\"Publications (\", min(scholar_output_prepped$Year, na.rm=T), \"-present)\")),\n    b = c(\"George Roff\", affiliation, ncites, hindex, i10, npapers)\n  ) |&gt; t(),\n  colnames = NULL,\n  options = list(\n    dom = 't',  # show only the table body\n    paging = FALSE,\n    ordering = FALSE\n  ),\n  rownames = FALSE\n) %&gt;%\n  formatStyle(columns = c(1, 2, 3, 4, 5, 6, 7), fontSize = '80%') \n\n\n\n\n\n\n\n\nCode\n## All publications to bib\n# Convert to BibTeX format\nscholar_bib &lt;- scholar_output %&gt;%\n  mutate(\n    bibtex_entry = paste0(\n      \"@article{\", pubid, \",\\n\",\n      \"  title = {\", title, \"},\\n\",\n      \"  author = {\", author, \"},\\n\",\n      \"  journal = {\", journal, \"},\\n\",\n      \"  year = {\", year, \"},\\n\",\n      \"  volume = {\", sub(\" \\\\(.*\", \"\", number), \"},\\n\", # Extract volume before '('\n      \"  number = {\", sub(\".*\\\\((.*)\\\\).*\", \"\\\\1\", number), \"},\\n\", # Extract issue inside '()'\n      \"  pages = {\", cites, \"},\\n\",\n      \"  cid = {\", cid, \"},\\n\",\n      \"  pubid = {\", pubid, \"}\\n\",\n      \"}\"\n    )\n  ) %&gt;%\n  pull(bibtex_entry)\n\n#writeLines(scholar_bib, \"scholar_output.bib\")\n\n## select publications to bib\nsearch_terms &lt;- c(\"Global disparity\", \"sharks on coral reefs\", \"evolutionary history\", \"seascapes\", \"decline of branching\", \"decoupled in Holocene\")\n\nscholar_bib &lt;- scholar_output %&gt;%\n  filter(sapply(title, function(x) any(grepl(paste(search_terms, collapse = \"|\"), x, ignore.case = TRUE)))) |&gt; \n  mutate(\n    bibtex_entry = paste0(\n      \"@article{\", pubid, \",\\n\",\n      \"  title = {\", title, \"},\\n\",\n      \"  author = {\", author, \"},\\n\",\n      \"  journal = {\", journal, \"},\\n\",\n      \"  year = {\", year, \"},\\n\",\n      \"  volume = {\", sub(\" \\\\(.*\", \"\", number), \"},\\n\", # Extract volume before '('\n      \"  number = {\", sub(\".*\\\\((.*)\\\\).*\", \"\\\\1\", number), \"},\\n\", # Extract issue inside '()'\n      \"  pages = {\", cites, \"},\\n\",\n      \"  cid = {\", cid, \"},\\n\",\n      \"  pubid = {\", pubid, \"}\\n\",\n      \"}\"\n    )\n  ) %&gt;%\n  pull(bibtex_entry)\n\nwriteLines(scholar_bib, \"select_scholar_output.bib\")\n\n# Function to lighten a vector of colors\nlighten_colors &lt;- function(colors, factor = 0.5) {\n  if (factor &lt; 0 || factor &gt; 1) stop(\"Factor must be between 0 and 1\")\n  col2rgb(colors) %&gt;%\n    t() %&gt;%\n    apply(1, function(col) {\n      rgb(\n        red = col[1] + (255 - col[1]) * factor,\n        green = col[2] + (255 - col[2]) * factor,\n        blue = col[3] + (255 - col[3]) * factor,\n        maxColorValue = 255\n      )\n    })\n}\n\n\n# Generate colors using RColorBrewer with adjusted alpha\nnum_colors &lt;- nrow(scholar_output_prepped)\ncolor_palette &lt;- colorRampPalette(rev(brewer.pal(9, \"RdYlBu\")))(num_colors)\ncolor_palette &lt;- lighten_colors(color_palette, factor = 0.4)  # Set alpha to 0.7\n\n# Map colors to the Citations column\nscholar_output_prepped &lt;- scholar_output_prepped %&gt;%\n  mutate(\n    cite_color = color_palette[rank(Citations, ties.method = \"first\")]\n  )\n\n## kbl format\n# scholar_output_prepped %&gt;%\n#   select(-cite_color) %&gt;%\n#   kbl(escape = FALSE) %&gt;%  # Enable rendering of HTML\n#   kable_styling(bootstrap_options = \"striped\", \n#                 font_size = 12, \n#                 fixed_thead = TRUE,\n#                 position = \"left\") %&gt;%\n#   column_spec(7, color = \"black\", \n#               background = scholar_output_prepped$cite_color) %&gt;%  # Use mapped colors\n#   column_spec(2, width_max = \"30em\") %&gt;%\n#   column_spec(4, width_max = \"60em\") %&gt;%\n#   column_spec(5, width_max = \"40em\") \n\n# scholar_output |&gt; \n#   group_by(year) |&gt; \n#   summarise(TotalCitations = sum(cites)) |&gt; \n#   mutate(TotalCitations = cumsum(TotalCitations)) |&gt; \n# ggplot() + theme_bw() +\n#   geom_point(aes(year, TotalCitations, fill=year), shape=21, show.legend=FALSE) + \n#   scale_fill_distiller(palette=\"Spectral\") + ylab(\"Cumulative Citations\")\n\n\ndatatable(\n  scholar_output_prepped %&gt;% select(-cite_color),\n  escape = FALSE,\n  options = list(\n    search = list(regex = TRUE, caseInsensitive = FALSE),\n    initComplete = JS(\n      \"function(settings, json) {\",\n      \"$('body').css({'font-family': 'Arial', 'font-size': '60%'});\",\n      \"}\"\n    ),\n    autoWidth = FALSE,\n    dom = 't&lt;\"bottom\"ip&gt;',\n    pageLength = 100,\n    columnDefs = list(\n      list(className = 'dt-center', targets = \"_all\"),\n      list(width = '10%', targets = 0),\n      list(width = '30%', targets = 1),\n      list(width = '10%', targets = 2),\n      list(width = '30%', targets = 3),\n      list(width = '10%', targets = 4),\n      list(width = '10%', targets = 5),\n      list(width = '10%', targets = 6)\n    )\n  ),\n  rownames = FALSE,\n  class = \"cell-border stripe\"\n) %&gt;% formatStyle(\n  'Citations',\n  backgroundColor = styleEqual(scholar_output_prepped$Citations, scholar_output_prepped$cite_color),\n  color = \"black\"\n) %&gt;%\n  formatStyle(columns = c(1, 2, 3, 4, 5, 6, 7), fontSize = '80%') \n\n\n\n\n\n\nCode\n# JIF\n# via https://www.google.com/url?sa=t&source=web&rct=j&opi=89978449&url=https://www.nie.re.kr/nie/cmmn/file/fileDown.do%3FatchFileId%3Deacd8968895c44c6a961680f3c0539d6%26fileSn%3D5&ved=2ahUKEwjK-uXPyYeLAxUVyDgGHVAsEeMQFnoECBYQAQ&usg=AOvVaw1_Y5_qHGFtehu4K4W6Uvas\n\n# jif &lt;- read.csv(\"2024_jif.csv\")\n# \n# #find.IF.JCR(\"Ecology\", 2024, exact.match = TRUE)\n# \n# scholar_output_prepped &lt;- scholar_output_prepped %&gt;%\n#   mutate(\n#     matched_jif_name = sapply(Journal, function(journal) {\n#       # Perform partial matching with grep\n#       match_idx &lt;- grep(journal, jif$Name, ignore.case = TRUE)\n#       if (length(match_idx) &gt; 0) {\n#         jif$Name[match_idx[1]]  # Use the first match if multiple matches exist\n#       } else {\n#         NA  # No match found\n#       }\n#     })\n#   )"
  },
  {
    "objectID": "code.html",
    "href": "code.html",
    "title": "Code",
    "section": "",
    "text": "R packages:\n\n\n\n\ndhw\nan R package for calculating SST metrics (Maximum Monthly Mean Climatology, SST Anomalies, Coral Bleaching HotSpots, Degree Heating Weeks)\n\n\n\ncoralseed\na spatially explicit reef-scale model of coral settlement following larval reseeding\n\n\n\nreefspawn\nan r package for quantifying reef-scale coral spawning events in Indo-Pacific reefs\n\n\n\nDCIEM\na development R package and shiny app to calculate dive profiles using the DCIEM diving algorithm\n\n\n\n\n\n\n\n\n\nSpatial analytics\n\noceans: a platform for viewing ocean data and coral bleaching events in realtime, written in Cesium.js\ndhw3: an interactive visualisation of marine heatwaves on the Great Barrier Reef, written in d3.js\nspatialtools: a collection of tools developed in r and shiny to facilitate spatial conservation planning built upon leaflet draw functionality (leafem and leaflet.extras).\n\n\n\nSensor development:\n\nsensorflow: development of low-cost open source drag-tilt flow meters using the arduino platform"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "marine-ecologist",
    "section": "",
    "text": "Science\n•   marine ecology \n•   spatial ecology, community ecology, population dynamics\n•   corals, fish, plants, fossils, microbes\n\n  - climate change impacts on marine systems\n  - larval dispersal and connectivity\n  - functional limits in scaling coral reef restoration\n  - reef accretion, Holocene reef dynamics, coral carbonate budgets\n  - conservation, science-policy integration\n\n\nStatistics & Modelling:\n• spatial and statistical modelling (R, Python, Julia)\n• bayesian workflows (INLA, brms, STAN)\n• geospatial analysis (sf, stars, terra, CesiumJS, D3)\n• simulation and agent-based modelling\n• data visualization (R, Python, javascript)\n• data analytics, LLMs (Amazon EC2)\n• open science and reproducible workflows\n\n\nTeaching\n• AI and large language models in teaching\n• adaptive learning platforms, enhanced learning tools\n• supervision and mentorship (Honours, Masters, PhD, ECR postdocs)\n\n\nMarine Operations\n•  field research, survey/experimental design and implementation\n•  scientific diving (ADAS Level 1 commercial) and remote field logistics\n•  drone surveys and spatial mapping\n\n\nOther:\n• media & communications \n• scientific outreach & community engagement \n• Science-policy integration"
  }
]